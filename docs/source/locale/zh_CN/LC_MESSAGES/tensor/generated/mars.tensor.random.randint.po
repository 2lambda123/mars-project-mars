# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2014-2018, The Alibaba Group Holding Ltd.
# This file is distributed under the same license as the mars package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2018.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: mars \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-07 17:09+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.5.3\n"

#: ../../source/tensor/generated/mars.tensor.random.randint.rst:2
msgid "mars.tensor.random.randint"
msgstr ""

#: mars.tensor.random.randint:1 of
msgid "Return random integers from `low` (inclusive) to `high` (exclusive)."
msgstr ""

#: mars.tensor.random.randint:3 of
msgid ""
"Return random integers from the \"discrete uniform\" distribution of the "
"specified dtype in the \"half-open\" interval [`low`, `high`). If `high` "
"is None (the default), then results are from [0, `low`)."
msgstr ""

#: mars.tensor.random.randint:11 of
msgid "low"
msgstr ""

#: mars.tensor.random.randint:10 of
msgid "int"
msgstr ""

#: mars.tensor.random.randint:10 of
msgid ""
"Lowest (signed) integer to be drawn from the distribution (unless "
"``high=None``, in which case this parameter is one above the *highest* "
"such integer)."
msgstr ""

#: mars.tensor.random.randint:14 of
msgid "high"
msgstr ""

#: mars.tensor.random.randint:13 of
msgid "int, optional"
msgstr ""

#: mars.tensor.random.randint:14 of
msgid ""
"If provided, one above the largest (signed) integer to be drawn from the "
"distribution (see above for behavior if ``high=None``)."
msgstr ""

#: mars.tensor.random.randint:18 of
msgid "size"
msgstr ""

#: mars.tensor.random.randint:17 of
msgid "int or tuple of ints, optional"
msgstr ""

#: mars.tensor.random.randint:17 of
msgid ""
"Output shape.  If the given shape is, e.g., ``(m, n, k)``, then ``m * n *"
" k`` samples are drawn.  Default is None, in which case a single value is"
" returned."
msgstr ""

#: mars.tensor.random.randint:23 of
msgid "dtype"
msgstr ""

#: mars.tensor.random.randint:22 of
msgid "dtype, optional"
msgstr ""

#: mars.tensor.random.randint:21 of
msgid ""
"Desired dtype of the result. All dtypes are determined by their name, "
"i.e., 'int64', 'int', etc, so byteorder is not available and a specific "
"precision may have different C types depending on the platform. The "
"default value is 'np.int'."
msgstr ""

#: mars.tensor.random.randint:25 of
msgid "density: float, optional"
msgstr ""

#: mars.tensor.random.randint:26 of
msgid "if density specified, a sparse tensor will be created"
msgstr ""

#: mars.tensor.random.randint:27 of
msgid "chunks"
msgstr ""

#: mars.tensor.random.randint:26 of
msgid "int or tuple of int or tuple of ints, optional"
msgstr ""

#: mars.tensor.random.randint:28 of
msgid "Desired chunk size on each dimension"
msgstr ""

#: mars.tensor.random.randint:30 of
msgid "gpu"
msgstr ""

#: mars.tensor.random.randint:29 of
msgid "bool, optional"
msgstr ""

#: mars.tensor.random.randint:30 of
msgid "Allocate the tensor on GPU if True, False as default"
msgstr ""

#: mars.tensor.random.randint:36 of
msgid "out"
msgstr ""

#: mars.tensor.random.randint:35 of
msgid "int or Tensor of ints"
msgstr ""

#: mars.tensor.random.randint:35 of
msgid ""
"`size`-shaped tensor of random integers from the appropriate "
"distribution, or a single such random int if `size` not provided."
msgstr ""

#: mars.tensor.random.randint:43 of
msgid "random.random_integers : similar to `randint`, only for the closed"
msgstr ""

#: mars.tensor.random.randint:42 of
msgid "similar to randint, only for the closed"
msgstr ""

#: mars.tensor.random.randint:41 of
msgid ""
"interval [`low`, `high`], and 1 is the lowest value if `high` is omitted."
" In particular, this other one is the one to use to generate uniformly "
"distributed discrete non-integers."
msgstr ""

#: mars.tensor.random.randint:54 of
msgid "Generate a 2 x 4 tensor of ints between 0 and 4, inclusive:"
msgstr ""

